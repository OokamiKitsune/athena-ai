"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate";
exports.ids = ["pages/api/generate"];
exports.modules = {

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "(api)/./pages/api/generate.js":
/*!*******************************!*\
  !*** ./pages/api/generate.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(openai__WEBPACK_IMPORTED_MODULE_0__);\n\nconst configuration = new openai__WEBPACK_IMPORTED_MODULE_0__.Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIApi(configuration);\n/* harmony default export */ async function __WEBPACK_DEFAULT_EXPORT__(req, res) {\n    if (!configuration.apiKey) {\n        res.status(500).json({\n            error: {\n                message: \"Authentication error.\"\n            }\n        });\n        return;\n    }\n    const question = req.body.question || \"\";\n    if (question.trim().length === 0) {\n        res.status(400).json({\n            error: {\n                message: \"Please ask a question.\"\n            }\n        });\n        return;\n    }\n    try {\n        const answer = await openai.createCompletion({\n            model: \"text-davinci-003\",\n            prompt: generatePrompt(question),\n            temperature: 1,\n            max_tokens: 100,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0\n        });\n        res.status(200).json({\n            result: answer.data.choices[0].text\n        });\n        console.log(answer.data.choices);\n    } catch (error) {\n        // Consider adjusting the error handling logic for your use case\n        if (error.response) {\n            console.error(error.response.status, error.response.data);\n            res.status(error.response.status).json(error.response.data);\n        } else {\n            console.error(`Error with OpenAI API request: ${error.message}`);\n            res.status(500).json({\n                error: {\n                    message: \"An error occurred during your request.\"\n                }\n            });\n        }\n    }\n}\nfunction generatePrompt(question) {\n    if (question === \"Who are you?\" || question === \"What are you\") {\n        return \"I am Athena. An Artificial Inteligence that can answer most questions. Please. Ask me anything.\";\n    } else {\n        const capitalizedAnswer = question[0].toUpperCase() + question.slice(1).toLowerCase();\n        return capitalizedAnswer;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2VuZXJhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBRWxELE1BQU1FLGdCQUFnQixJQUFJRixpREFBYUEsQ0FBQztJQUN0Q0csUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ3BDO0FBQ0EsTUFBTUMsU0FBUyxJQUFJTiw2Q0FBU0EsQ0FBQ0M7QUFFN0IsNkJBQWUsMENBQWdCTSxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUN2QyxJQUFJLENBQUNQLGNBQWNDLE1BQU0sRUFBRTtRQUN6Qk0sSUFBSUMsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUNuQkMsT0FBTztnQkFDTEMsU0FBUztZQUNYO1FBQ0Y7UUFDQTtJQUNGLENBQUM7SUFFRCxNQUFNQyxXQUFXTixJQUFJTyxJQUFJLENBQUNELFFBQVEsSUFBSTtJQUN0QyxJQUFJQSxTQUFTRSxJQUFJLEdBQUdDLE1BQU0sS0FBSyxHQUFHO1FBQ2hDUixJQUFJQyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxPQUFPO2dCQUNMQyxTQUFTO1lBQ1g7UUFDRjtRQUNBO0lBQ0YsQ0FBQztJQUNELElBQUk7UUFDRixNQUFNSyxTQUFTLE1BQU1YLE9BQU9ZLGdCQUFnQixDQUFDO1lBQzNDQyxPQUFPO1lBQ1BDLFFBQVFDLGVBQWVSO1lBQ3ZCUyxhQUFhO1lBQ2JDLFlBQVk7WUFDWkMsT0FBTztZQUNQQyxtQkFBbUI7WUFDbkJDLGtCQUFrQjtRQUNwQjtRQUNBbEIsSUFBSUMsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFaUIsUUFBUVYsT0FBT1csSUFBSSxDQUFDQyxPQUFPLENBQUMsRUFBRSxDQUFDQyxJQUFJO1FBQUM7UUFDM0RDLFFBQVFDLEdBQUcsQ0FBQ2YsT0FBT1csSUFBSSxDQUFDQyxPQUFPO0lBQ2pDLEVBQUUsT0FBTWxCLE9BQU87UUFDYixnRUFBZ0U7UUFDaEUsSUFBSUEsTUFBTXNCLFFBQVEsRUFBRTtZQUNsQkYsUUFBUXBCLEtBQUssQ0FBQ0EsTUFBTXNCLFFBQVEsQ0FBQ3hCLE1BQU0sRUFBRUUsTUFBTXNCLFFBQVEsQ0FBQ0wsSUFBSTtZQUN4RHBCLElBQUlDLE1BQU0sQ0FBQ0UsTUFBTXNCLFFBQVEsQ0FBQ3hCLE1BQU0sRUFBRUMsSUFBSSxDQUFDQyxNQUFNc0IsUUFBUSxDQUFDTCxJQUFJO1FBQzVELE9BQU87WUFDTEcsUUFBUXBCLEtBQUssQ0FBQyxDQUFDLCtCQUErQixFQUFFQSxNQUFNQyxPQUFPLENBQUMsQ0FBQztZQUMvREosSUFBSUMsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDbkJDLE9BQU87b0JBQ0xDLFNBQVM7Z0JBQ1g7WUFDRjtRQUNGLENBQUM7SUFDSDtBQUNGLENBQUM7QUFDRCxTQUFTUyxlQUFlUixRQUFRLEVBQUU7SUFDaEMsSUFBSUEsYUFBYSxrQkFBa0JBLGFBQWEsZ0JBQWdCO1FBQzlELE9BQU87SUFDUCxPQUFPO1FBQ0wsTUFBTXFCLG9CQUNSckIsUUFBUSxDQUFDLEVBQUUsQ0FBQ3NCLFdBQVcsS0FBS3RCLFNBQVN1QixLQUFLLENBQUMsR0FBR0MsV0FBVztRQUN2RCxPQUFPSDtJQUNULENBQUM7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW5haS1xdWlja3N0YXJ0LW5vZGUvLi9wYWdlcy9hcGkvZ2VuZXJhdGUuanM/NjI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25maWd1cmF0aW9uLCBPcGVuQUlBcGkgfSBmcm9tIFwib3BlbmFpXCI7XG5cbmNvbnN0IGNvbmZpZ3VyYXRpb24gPSBuZXcgQ29uZmlndXJhdGlvbih7XG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG59KTtcbmNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUlBcGkoY29uZmlndXJhdGlvbik7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICBpZiAoIWNvbmZpZ3VyYXRpb24uYXBpS2V5KSB7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgZXJyb3I6IHtcbiAgICAgICAgbWVzc2FnZTogXCJBdXRoZW50aWNhdGlvbiBlcnJvci5cIixcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBxdWVzdGlvbiA9IHJlcS5ib2R5LnF1ZXN0aW9uIHx8ICcnO1xuICBpZiAocXVlc3Rpb24udHJpbSgpLmxlbmd0aCA9PT0gMCkge1xuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgIGVycm9yOiB7XG4gICAgICAgIG1lc3NhZ2U6IFwiUGxlYXNlIGFzayBhIHF1ZXN0aW9uLlwiLFxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuICB0cnkge1xuICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IG9wZW5haS5jcmVhdGVDb21wbGV0aW9uKHtcbiAgICAgIG1vZGVsOiBcInRleHQtZGF2aW5jaS0wMDNcIixcbiAgICAgIHByb21wdDogZ2VuZXJhdGVQcm9tcHQocXVlc3Rpb24pLFxuICAgICAgdGVtcGVyYXR1cmU6IDEsXG4gICAgICBtYXhfdG9rZW5zOiAxMDAsXG4gICAgICB0b3BfcDogMSxcbiAgICAgIGZyZXF1ZW5jeV9wZW5hbHR5OiAwLFxuICAgICAgcHJlc2VuY2VfcGVuYWx0eTogMCxcbiAgICB9KTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHJlc3VsdDogYW5zd2VyLmRhdGEuY2hvaWNlc1swXS50ZXh0IH0pO1xuICAgIGNvbnNvbGUubG9nKGFuc3dlci5kYXRhLmNob2ljZXMpXG4gIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAvLyBDb25zaWRlciBhZGp1c3RpbmcgdGhlIGVycm9yIGhhbmRsaW5nIGxvZ2ljIGZvciB5b3VyIHVzZSBjYXNlXG4gICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yLnJlc3BvbnNlLnN0YXR1cywgZXJyb3IucmVzcG9uc2UuZGF0YSk7XG4gICAgICByZXMuc3RhdHVzKGVycm9yLnJlc3BvbnNlLnN0YXR1cykuanNvbihlcnJvci5yZXNwb25zZS5kYXRhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihgRXJyb3Igd2l0aCBPcGVuQUkgQVBJIHJlcXVlc3Q6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICBtZXNzYWdlOiAnQW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHlvdXIgcmVxdWVzdC4nLFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGdlbmVyYXRlUHJvbXB0KHF1ZXN0aW9uKSB7XG4gIGlmIChxdWVzdGlvbiA9PT0gXCJXaG8gYXJlIHlvdT9cIiB8fCBxdWVzdGlvbiA9PT0gXCJXaGF0IGFyZSB5b3VcIikge1xuICAgIHJldHVybiBcIkkgYW0gQXRoZW5hLiBBbiBBcnRpZmljaWFsIEludGVsaWdlbmNlIHRoYXQgY2FuIGFuc3dlciBtb3N0IHF1ZXN0aW9ucy4gUGxlYXNlLiBBc2sgbWUgYW55dGhpbmcuXCIgIFxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBjYXBpdGFsaXplZEFuc3dlciA9XG4gICAgcXVlc3Rpb25bMF0udG9VcHBlckNhc2UoKSArIHF1ZXN0aW9uLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XG4gICAgICByZXR1cm4gY2FwaXRhbGl6ZWRBbnN3ZXI7XG4gICAgfVxufSJdLCJuYW1lcyI6WyJDb25maWd1cmF0aW9uIiwiT3BlbkFJQXBpIiwiY29uZmlndXJhdGlvbiIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsIm9wZW5haSIsInJlcSIsInJlcyIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJxdWVzdGlvbiIsImJvZHkiLCJ0cmltIiwibGVuZ3RoIiwiYW5zd2VyIiwiY3JlYXRlQ29tcGxldGlvbiIsIm1vZGVsIiwicHJvbXB0IiwiZ2VuZXJhdGVQcm9tcHQiLCJ0ZW1wZXJhdHVyZSIsIm1heF90b2tlbnMiLCJ0b3BfcCIsImZyZXF1ZW5jeV9wZW5hbHR5IiwicHJlc2VuY2VfcGVuYWx0eSIsInJlc3VsdCIsImRhdGEiLCJjaG9pY2VzIiwidGV4dCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImNhcGl0YWxpemVkQW5zd2VyIiwidG9VcHBlckNhc2UiLCJzbGljZSIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/generate.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/generate.js"));
module.exports = __webpack_exports__;

})();